
#include <iostream>
#include <cstring>
using namespace std;

const int SIZE = 100;

struct inv_type
{
    /* data */

    char item[40]; // –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    double cost; // —Å—Ç–æ–∏–º–æ—Å—Ç—å
    double retail; // —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞
    int on_hand; // –∏–º–µ—é—â–µ–µ—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    int lead_time; // —á–∏—Å–ª–æ –¥–Ω–µ–π –¥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø–∞—Å–æ–≤

} invtry[SIZE];


int menu();

void init_list();
void enter();
void display();
void update();
void input(int x);

int main()
{

    strcpy(invtry[1].item, "orange");
    
    cout << invtry[1].item << "\n";
    cout << *invtry[1].item << "\n";

    return 0;

    // char choice;
    // init_list();

    // for (;;){
    //     choice = menu();

    //     switch (choice)
    //         {
    //         case 'e': enter();
    //             break;
    //         case 'd': display();
    //             break;
    //         case 'u': update();
    //             break;
    //         case 'q': return 0;
            
    //         }
    // }
}

    

 

void init_list()
{
    
    for ( int t=0; t<SIZE; t++) *invtry[t].item = '\0';
}


int menu()
{
    char ch;
    cout << '\n';
    do {
    cout << "(E)nter\n"; // –í–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç.
    cout << "(D)isplay\n"; // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≤—Å—é –≤–µ–¥–æ–º–æ—Å—Ç—å.
    cout << "(U)pdate\n"; // –ò–∑–º–µ–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç.
    cout << "(Q)uit\n\n"; // –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
    cout << "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ";
    cin >> ch;

}while(!strchr("eduq", tolower(ch)));
    return tolower(ch);
}


void enter(){
    cout << "üòº enter" << "\n";

    int i;

    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—É—é —Å–≤–æ–±–æ–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É.
    for ( i = 0; i < SIZE; i++)
    {
        if ( ! *invtry[i].item) break;
    }

    // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø–æ–ª–æ–Ω, –∑–Ω–∞—á–µ–Ω–∏–µ i –±—É–¥–µ—Ç —Ä–∞–≤–Ω–æ SIZE.
    if(i==SIZE){
        cout << "–°–ø–∏—Å–æ–∫ –ø–æ–ª–æ–Ω. \n";
        return;
    }

    input(i);
    
}

// –í–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

void input(int i){
    cout << "–¢–æ–≤–∞—Ä: ";
    cin >> invtry[i].item;

    cout << "–°—Ç–æ–∏–º–æ—Å—Ç—å: ";
    cin >> invtry[i].cost;
    
    cout << "–†–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞: ";
    cin >> invtry[i].retail;
    
    cout << "–í –Ω–∞–ª–∏—á–∏–∏: ";
    cin >> invtry[i].on_hand;
    
    cout << "–í—Ä–µ–º—è –¥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø–∞—Å–æ–≤ (–≤ –¥–Ω—è—Ö): ";
    cin >> invtry[i].lead_time;
}


// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–Ω–æ–π –≤–µ–¥–æ–º–æ—Å—Ç–∏.
void display(){
cout << "üòº display" << "\n";
int t;
for(t=0; t<SIZE; t++ ) {
if(*invtry[t].item) {
cout << invtry[t].item << '\n';
cout << "–°—Ç–æ–∏–º–æ—Å—Ç—å: $" << invtry[t].cost;
cout << "\nB —Ä–æ–∑–Ω–∏—Ü—É: $";
cout << invtry[t].retail << '\n';
cout << "–í –Ω–∞–ª–∏—á–∏–∏: " << invtry[t].on_hand;
cout << "\n–î–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å: ";
cout << invtry[t].lead_time << " –¥–Ω–µ–π\n\n";
}
}
}


// –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
void update()
{
    cout << "üòº update" << "\n";
int i;
char name[80];
cout << "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ";
cin >> name;
for(i=0; i<SIZE; i++)
if(!strcmp(name, invtry[i].item)) break;
if(i==SIZE) {
cout << "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.\n";
return;
}
cout << "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n";
input(i);
}